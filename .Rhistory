#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:10) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:100) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
#reset()
for (times in 1:100) {
a(0, 1);b(0, 1);eval();
cat("Diff: ", prob()-p(A), '\n')
}
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
source('C:/Users/Richard/Desktop/MSIM Coursework/Stats 110/Ch 2/R Scripts/problem 23.R')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(c(1,1,1,2,2))
library(installr)
install.packages("installr")
library(installr)
updateR()
updateR()
#install.packages("data.table")
library(data.table)
dt <- data.frame(ID=1:3, names=c("Alice", "Bob", "Carlos"), money=NA)
matrix(na, 2, 2)
matrix(NA, 2, 2)
matrix(1, 2, 2)
matrix(c(1,2), 2, 2)
matrix(c(1,2,3), 2, 2)
x<-matrix(c(1,2,3), 2, 2)
x
dt <- data.frame(ID=1:3, names=c("Alice", "Bob", "Carlos"), money=NA)
dt
dt[,1]
dt[,"ID"]
library(data.table)
mydt <- data.table(dt)
mydt
dt[,ID]
dt[ID]
mydt[ID]
mydt[,ID]
mydt[, .(names, money)]
mydt[,"groups"] <- c(1,1,2)
mydt
mydt$money <- c(100, 250, 300)
mydt[,.(ID, names, money, Average_Money=mean(money)), groups]
mydt[,.(Average_Money=mean(money)), groups]
rep(4, 2)
replicate(4,2)
rep(NA, 2)
df <- data.frame(ID=rep(NA, 100), name=rep(NA, 100), money=rep(NA, 100))
df
install.packages("nycflights13")
# Richard McGovern
# INFX 573: Data Science I
# Assignment 2
#
#
library(nycflights13)
# Richard McGovern
# INFX 573: Data Science I
# Assignment 2
#
# WRITE UP HERE OR IN SEPARATE DOCUMENT?
library(data.table)
library(nycflights13) # Load flights library
data(flights) # load data on flights
flights <- data.table(flights) # Put it in a data.table for ease of EDA
### [1] Letâ€™s explore flights from NYC to Seattle. Use the flights dataset to answer the following
# questions.
# a) (2 pt) How many flights were there to and from NYC in 2013?
# New York airports include: JFK, LGA or EWR
# Origin airports in the data include only these, so all flights are from New York. None to.
nrow(flights) #336776
# b) (2 pt) How many flights were there from NYC airports to Seattle (SEA) in 2013?
# Let's count flights with Seattle destination
sea.flights <- flights[dest=='SEA']
nrow(sea.flights) #3923
# c) (2 pt) How many airlines fly from NYC to Seattle? Hint: look at the function unique()
length(unique(sea.flights$carrier)) # 5
# d) (2 pt) What is the average arrival delay for flights from NYC to Seattle?
sea.flights[, .(Avg.ArrivalDelay=mean(arr_delay,na.rm=T)) ] # -1.099
# Perhaps this means on average, flights to Seattle arrived about a minute early.
### 2. Flights are often delayed. Consider the following questions exploring delay patterns.
# a) (4 pt) What is the mean arrival delay time? What is the median arrival delay time?
# Mean arrival delay time: 6.89 minutes
mean(flights$arr_delay, na.rm=T)
# Median arrival delay time: -5 minutes
median(flights$arr_delay, na.rm=T)
# b) (2 pt) What does a negative arrival delay mean?
# I interpret negative arrival delay to mean that the flight arrived early by that much time.
# c) (4 pt) Plot a histogram of arrival delay times. Does the answers you obtained in (a)
# consistent with the shape of the delay time distribution?
# A mean of 6.89 minutes and a median of -5 minutes seems consistent with this histogram
# because is is skewed right, so there are large outliers.
hist(flights$arr_delay)
# d) (4 pt) Is there seasonality in departure delays? Try
# by(flights$dep_delay, flights$month, function(x) mean(x, na.rm=T))
# and describe what patterns you see. Is there a best month to leave New York? A worst?
# Why might this be?
# There is a significant dip in departure delays during Sep, Oct, and Nov (the minimum). But it peaks in July.
# It could be because fewer people board flights during the Fall, but more in the Summer for vacation.
#months <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
departure.delays <- by(flights$dep_delay, flights$month, function(x) mean(x, na.rm=T))
barplot(departure.delays, xlab='Month', ylab='Minutes', main='Mean Departure Delays')
### 3. EDA
# a) (4 pt) Plot a histogram of the total air flight time with 100 breaks. (look at the help for
# hist()). How many peaks do you see in this distribution? What is an explanation for this?
# ...
hist(flights$air_time, breaks=100)
#..
hist(flights$dep_time[!is.na(flights$dep_time)], main="Dep Times No NA")
#..
hist(flights$dep_time[!is.na(flights$dep_time),breaks=100], main="Dep Times No NA")
#..
hist(flights$dep_time[!is.na(flights$dep_time)],breaks=100, main="Dep Times No NA")
#..
hist(flights$dep_time[!is.na(flights$dep_time)], main="Dep Times No NA")
hist(flights$dep_time[flights$dep_time], main="Dep Times No NA")
Mode <- function(x) {
ux <- unique(x)
ux <- ux[!is.na(ux)]
ux[which.max(tabulate(match(x, ux)))]
}
Mode(flights$air_time)
Mode(flights$dep_time)
hist(flights$dep_time[flights$dep_time], main="Dep Times No NA")
flights[is.na(dep_time), sched_dep_time]
head(flights[is.na(dep_time), .(Scheduled=sched_dep_time, Departed=dep_time)]
)
nrow(flights[is.na(dep_time), .(Scheduled=sched_dep_time, Departed=dep_time)])
nrow(flights)
summary(flights$dep_time)
summary(flights$sched_dep_time)
## Make new DepField
flights$DepField <- flights$dep_time
flights$DepField[is.na(DepField)] <- flights$sched_dep_time
flights$DepField[is.na(flights$DepField)] <- flights$sched_dep_time
flights$DepField[is.na(flights$DepField)] <- flights$sched_dep_time[is.na(flights$dep_time)]
sum(is.na(flights$DepField)
)
flights[,.(dep_time, sched_dep_time, DepField)]
df <- data.frame(a=1:5, b=c('a',NA, 'c','d',NA))
df
df <- data.table(df)
df[is.na(b)]
df[is.na(b)]$b <- df$a
df
df <- data.frame(a=1:5, b=c('a',NA, 'c','d',NA))
df <- data.table(data.frame(a=1:5, b=c('a',NA, 'c','d',NA)))
df
df[is.na(b)]
df[is.na(b)]$a
df[is.na(b)]$b #<- df[is.na(b)]$a
df$c <- 1:5
df
df$c
df$c <- rep(NA, 5)
df
df$c[1] <- 'a'
df
df$c[is.na(c)]
df$c[is.na(b)]
df$[is.na(c)]
df[is.na(c)]
df[is.na(c)]$c <- df[is.na(c)]$a
df
df$lets <- LETTERS[1:5]
df[is.na(b)]$b <- df[is.na(b)]$lets
df
## Make new DepField
flights$DepField <- flights$dep_time
flights[is.na(flights$dep_time)]$DepField <- flights[is.na(flights$dep_time)]$sched_dep_time
flights[,.(dep_time, sched_dep_time, DepField)]
flights[is.na(flights$dep_time)]$DepField
flights$DepField[is.na(flights$dep_time)]
## Make new DepField
flights$DepField <- flights$dep_time
flights$DepField[is.na(flights$dep_time)] <- flights$sched_dep_time[is.na(flights$dep_time)]
flights$DepField[is.na(flights$dep_time)] <- flights[is.na(flights$dep_time)]$sched_dep_time
hist(flights$DepField, main="Departure Times")
#..
hist(flights$dep_time[!is.na(flights$dep_time)], main="Dep Times No NA")
Mode(flights$DepField)
Mode(flights$dep_time)
Mode(flights$DepField) # different 755
Mode(flights$sched_dep_time)
#..
hist(flights$dep_time[!is.na(flights$dep_time)], main="Dep Times No NA")
hist(flights$dep_time[flights$dep_time], main="Dep Times")
hist(flights$dep_time, main="Dep Times")
#..
hist(flights$dep_time[!is.na(dep_time)], main="Dep Times No NA")
is.data.table(flights)
#..
hist(flights$dep_time[!is.na(dep_time)], main="Dep Times No NA")
hist(flights$dep_time, main="Dep Times")
#..
hist(flights[!is.na(dep_time)]$dep_time, main="Dep Times No NA")
hist(flights$dep_time, main="Dep Times")
tbl <- table(flights$dep_time)
tbl
help(library)
# ...
hist(flights$air_time, breaks=100)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(flights$dep_delay)
help(boxplot)
names(flights)
head(flights)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights)
plot(x=hour, y=dep_delay, data=flights)
plot(x=flights$hour, y=flights$dep_delay)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 200)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 200])
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 100])
summary(flights$dep_delay)
plot(mod3)
for (pkg in c('data.table', 'nycflights13')) {
if(!(pkg %in% rownames(installed.packages()))) {
install.packages(pkg)
}
}
library(data.table)
library(nycflights13) # Load flights library
data(flights) # load data on flights
flights <- data.table(flights) # Put it in a data.table for ease of EDA
# New York airports include: JFK, LGA or EWR
# Origin airports in the data include only these, so all flights are from New York. None to.
nrow(flights) #336776
# Let's count flights with Seattle destination
sea.flights <- flights[dest=='SEA']
nrow(sea.flights) #3923
# c) (2 pt) How many airlines fly from NYC to Seattle? Hint: look at the function unique()
length(unique(sea.flights$carrier)) # 5
# d) (2 pt) What is the average arrival delay for flights from NYC to Seattle?
sea.flights[, .(Avg.ArrivalDelay=mean(arr_delay,na.rm=T)) ] # -1.099
# Mean arrival delay time: 6.89 minutes
mean(flights$arr_delay, na.rm=T)
# Median arrival delay time: -5 minutes
median(flights$arr_delay, na.rm=T)
# A mean of 6.89 minutes and a median of -5 minutes seems consistent with this histogram
# because is is skewed right, so there are large outliers.
hist(flights$arr_delay)
# There is a significant dip in departure delays during Sep, Oct, and Nov (the minimum). But it peaks in July.
# It could be because fewer people board flights during the Fall, but more in the Summer for vacation.
#months <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
departure.delays <- by(flights$dep_delay, flights$month, function(x) mean(x, na.rm=T))
barplot(departure.delays, xlab='Month', ylab='Minutes', main='Mean Departure Delays')
# I see several peaks in this distribution, possibly five. These might be explained by common trips to
# cities at different distances from NYC.
# The 30-40 minute trips might be to Boston, 2hr trips to Chicago, 5-6hr trips to Seattle
hist(flights$air_time, breaks=100)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 100])
# Richard McGovern
# INFX 573: Data Science I
# Assignment 2
#
# WRITE UP HERE OR IN SEPARATE DOCUMENT?
# Install needed packages if necessary
for (pkg in c('data.table', 'nycflights13')) {
if(!(pkg %in% rownames(installed.packages()))) {
install.packages(pkg)
}
}
library(data.table)
library(nycflights13) # Load flights library
data(flights) # load data on flights
flights <- data.table(flights) # Put it in a data.table for ease of EDA
### [1] Letâ€™s explore flights from NYC to Seattle. Use the flights dataset to answer the following
# questions.
# a) (2 pt) How many flights were there to and from NYC in 2013?
# New York airports include: JFK, LGA or EWR
# Origin airports in the data include only these, so all flights are from New York. None to.
nrow(flights) #336776
# b) (2 pt) How many flights were there from NYC airports to Seattle (SEA) in 2013?
# Let's count flights with Seattle destination
sea.flights <- flights[dest=='SEA']
nrow(sea.flights) #3923
# c) (2 pt) How many airlines fly from NYC to Seattle? Hint: look at the function unique()
length(unique(sea.flights$carrier)) # 5
# d) (2 pt) What is the average arrival delay for flights from NYC to Seattle?
sea.flights[, .(Avg.ArrivalDelay=mean(arr_delay,na.rm=T)) ] # -1.099
# Perhaps this means on average, flights to Seattle arrived about a minute early.
### 2. Flights are often delayed. Consider the following questions exploring delay patterns.
# a) (4 pt) What is the mean arrival delay time? What is the median arrival delay time?
# Mean arrival delay time: 6.89 minutes
mean(flights$arr_delay, na.rm=T)
# Median arrival delay time: -5 minutes
median(flights$arr_delay, na.rm=T)
# b) (2 pt) What does a negative arrival delay mean?
# I interpret negative arrival delay to mean that the flight arrived early by that much time.
# c) (4 pt) Plot a histogram of arrival delay times. Does the answers you obtained in (a)
# consistent with the shape of the delay time distribution?
# A mean of 6.89 minutes and a median of -5 minutes seems consistent with this histogram
# because is is skewed right, so there are large outliers.
hist(flights$arr_delay)
# d) (4 pt) Is there seasonality in departure delays? Try
# by(flights$dep_delay, flights$month, function(x) mean(x, na.rm=T))
# and describe what patterns you see. Is there a best month to leave New York? A worst?
# Why might this be?
# There is a significant dip in departure delays during Sep, Oct, and Nov (the minimum). But it peaks in July.
# It could be because fewer people board flights during the Fall, but more in the Summer for vacation.
#months <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
departure.delays <- by(flights$dep_delay, flights$month, function(x) mean(x, na.rm=T))
barplot(departure.delays, xlab='Month', ylab='Minutes', main='Mean Departure Delays')
### 3. EDA
# a) (4 pt) Plot a histogram of the total air flight time with 100 breaks. (look at the help for
# hist()). How many peaks do you see in this distribution? What is an explanation for this?
# I see several peaks in this distribution, possibly five. These might be explained by common trips to
# cities at different distances from NYC.
# The 30-40 minute trips might be to Boston, 2hr trips to Chicago, 5-6hr trips to Seattle
hist(flights$air_time, breaks=100)
# b) (4 pt) What time of day do flights most commonly depart? Why might there be two most
# popular times of day to depart?
#..
hist(flights[!is.na(dep_time)]$dep_time, main="Dep Times No NA")
hist(flights$dep_time, main="Dep Times")
tbl <- table(flights$dep_time)
tbl
# Write my own Mode function that removes missing values before counting them.
Mode <- function(x) {
ux <- unique(x)
ux <- ux[!is.na(ux)] # Remove NA's
ux[which.max(tabulate(match(x, ux)))]
}
## Make new Departure Time field with the scheduled time when the actual departure time is missing
flights$DepField <- flights$dep_time
flights[is.na(flights$dep_time)]$DepField <- flights[is.na(flights$dep_time)]$sched_dep_time
flights[,.(dep_time, sched_dep_time, DepField)]
hist(flights$DepField, main="Departure Times")
Mode(flights$dep_time)
Mode(flights$DepField) # different 755
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 100])
### 4. (10 pt) Develop one research question you can address using the nycflights2013 dataset.
# Provide two visualizations to support your exploration of this question. Discuss what you find.
Mode(flights$dep_time)
Mode(flights$DepField) # different 755
hist(flights$dep_time)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 100])
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay > 100)
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay > 100])
# c) (4 pt) Plot a box plot of departure delays and hour of departure. What pattern do you
# see? What is an explanation for this?
boxplot(dep_delay ~ hour, data=flights[dep_delay < 100])
nrow(height)
library(UsingR)
height <- get("father.son")
nrow(height)
height <- get("father.son")
# (4a) Perform an exploratory analysis of the father and son heights.
# What does the relationship look like? Would a linear model be appropriate here?
nrow(height) # > 30, check
# Consider also correlation of error terms, non-constant variance of error terms,
# outliers, and collinearity
plot(height$fheight, height$sheight, main="Heights of Fathers and Sons",
xlab="Son Height", ylab="Father Height")
mod <- lm(height$fheight ~ height$sheight)
plot(mod$fitted.values, mod$residuals)
plot(mod)
plot(mod$fitted.values, mod$residuals)
plot(mod, which=1)
plot(mod, which=1)
# Not the correct way to show it...need vs fitted values?
# cheat:
plot(mod, which=1)
exp(1000, 1001, 1002, 1003)
exp(c(1000, 1001, 1002, 1003))
exp(c(100, 101, 102, 103))
pw <- function(x) 1.01^x
pw(c(100, 101, 102, 103))
pw <- function(x) 1.1^x
pw(c(100, 101, 102, 103))
diff(c(100,101,102,103))
var(c(100, 101, 102, 103))
var(pw(c(100, 101, 102, 103)))
dists <- c(100, 101, 102, 103)
help(sapply)
sapply(dists, function(x) 1.1^x)
var(sapply(dists, function(x) 1.1^x))
var(sapply(dists, function(x) round(1.1^x, 2)))
sapply(dists, function(x) round(1.1^x, 2))
sapply(dists, function(x) round(1.1^x, 1))
sapply(dists, function(x) round(1.1^x, 0))
diff(sapply(dists, function(x) round(1.1^x, 0)))
readClipboard()
#richard
setwd("C:\\Users\\Richard\\Desktop\\DS1_Research\\twitter-hate-speech-identification")
# Allows for error stack tracking
options(error=traceback)
options(show.error.locations = TRUE)
# Load the libraries
library(twitteR)
library(ROAuth)
library(httr)
## MAKE AN ACCOUNT AND ENTER IN YOUR CREDENTIALS FROM HERE:
# http://docs.inboundnow.com/guide/create-twitter-application/
# Set API Keys
api_key <- "xOnMCl2XZQf96M3S0E8ebGiEV"
api_secret <- "uSKcaXSklvu69wwLdymo0nZhgaKk6cHpiNTSGzas9Yg6hEq9NZ"
access_token <- "67433123-AZezkqDJswd011NJHjNTTDOwvCWyVfqmgFxd6MqsW"
access_token_secret <- "cZihVqQ2eKW5lnyS6IMaxh0gaQsLI54u1Euly82GUEGtw"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
# Grab random tweets before and after the election
# The API is only giving me random tweets from today - Will look into this -Amir
tweets_post_election <- searchTwitter('trump', since = '2016-11-08' , geocode="38.999,-94.629,2500mi", n=1000)
